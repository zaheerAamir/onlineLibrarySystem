version: '3.0'

services:
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile 
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - booksservice
      - authservice
      - postgres
    networks:
      - bridge
    command: /bin/bash -c "cd /usr/src/app && ./wait-for-it.sh -t 60 booksservice:8080 && ./wait-for-it.sh -t 60 authservice:8081 && nginx -g 'daemon off;'" 

  booksservice:
    build: 
      context: .
      dockerfile: books/Dockerfile
    image: searchrecommend-booksservice:v1
    ports:
      - "8080:8080"
    environment:
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - POSTGRES_CONTAINER_ID=${POSTGRES_CONTAINER_ID}
      - API_KEY=${API_KEY}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
    command: go run main.go -b 0.0.0.0
    networks:
      - bridge

  authservice:
    build: 
      context: .
      dockerfile: auth/Dockerfile
    image: searchrecommend-authservice:v1 
    ports:
      - "8081:8081"
    environment:
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - POSTGRES_CONTAINER_ID=${POSTGRES_CONTAINER_ID}
      - API_KEY=${API_KEY}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
    command: go run main.go -b 0.0.0.0
    networks:
      - bridge

  postgres:
    image: postgres
    container_name: DB_Container
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - bridge

networks:
  bridge: 

volumes:
  postgres_data: